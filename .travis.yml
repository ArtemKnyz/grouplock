matrix:
  include:
# For iOS builds:
  - language: objective-c
    os: osx
    osx_image: xcode7.3
    env: DEVICE="iPhone 4s" VERSION=9.3 PLATFORM="iOS"
  - language: objective-c
    os: osx
    osx_image: xcode7.3
    env: DEVICE="iPhone 5s" VERSION=9.3 PLATFORM="iOS"
  - language: objective-c
    os: osx
    osx_image: xcode7.3
    env: DEVICE="iPhone 6s" VERSION=9.3 PLATFORM="iOS"
  - language: objective-c
    os: osx
    osx_image: xcode7.3
    env: DEVICE="iPhone 6s Plus" VERSION=9.3 PLATFORM="iOS"
  - language: objective-c
    os: osx
    osx_image: xcode7.3
    env: DEVICE="iPhone 4s" VERSION=9.0 PLATFORM="iOS"
  - language: objective-c
    os: osx
    osx_image: xcode7.3
    env: DEVICE="iPhone 5s" VERSION=9.0 PLATFORM="iOS"
  - language: objective-c
    os: osx
    osx_image: xcode7.3
    env: DEVICE="iPhone 6s" VERSION=9.0 PLATFORM="iOS"
  - language: objective-c
    os: osx
    osx_image: xcode7.3
    env: DEVICE="iPhone 6s Plus" VERSION=9.0 PLATFORM="iOS"
# For Android builds:
  # - language: android
    # env: PLATFORM="Android"
    # android:
      # components:
        # etc.

before_install:
  - sh -c "if [ '$PLATFORM' = 'iOS' ]; then sudo gem install xcpretty --no-rdoc --no-ri --no-document; fi"
  - sh -c "if [ '$PLATFORM' = 'iOS' ]; then sudo gem install cocoapods --no-rdoc --no-ri; fi"
  - sh -c "if [ '$PLATFORM' = 'iOS' ]; then pod install --project-directory=GroupLockiOS; fi"
  # - sh -c "if [ '$PLATFORM' = 'Android' ]; then <# perform commands for Android build #>; fi"

script:
  - sh -c "if [ '$PLATFORM' = 'iOS' ]; then set -o pipefail && xcodebuild -workspace GroupLockiOS/GroupLock.xcworkspace -scheme GroupLock -destination \"platform=iOS Simulator,name=$DEVICE,OS=$VERSION\" build test | xcpretty; fi"
# - sh -c "if [ '$PLATFORM' = 'Android' ]; then <# perform commands for Android build #>; fi"

after_success:
  - if [ \"$PLATFORM\" = \"iOS\" ]; then bash <(curl -s https://codecov.io/bash) -J 'GroupLock'; fi
# - if [ '$PLATFORM' = 'Android' ]; then <# perform commands for Android build #>; fi
